{
  "name": "grunt-premailer",
  "description": "Grunt wrapper task for premailer",
  "version": "0.2.7",
  "homepage": "https://github.com/dwightjack/grunt-premailer",
  "author": {
    "name": "Marco Solazzi",
    "email": "marco.solazzi@gmail.com",
    "url": "https://github.com/dwightjack"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/dwightjack/grunt-premailer.git"
  },
  "bugs": {
    "url": "https://github.com/dwightjack/grunt-premailer/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/dwightjack/grunt-premailer/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test",
    "postinstall": "node lib/postinstall.js"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.10.0",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-nodeunit": "~0.3.3",
    "grunt": "~0.4.4"
  },
  "peerDependencies": {
    "grunt": "~0.4.4"
  },
  "keywords": [
    "gruntplugin"
  ],
  "dependencies": {
    "dargs": "~0.1.0",
    "lodash": "~2.4.1",
    "async": "~0.7.0",
    "chalk": "~0.4.0",
    "semver": "~2.2.1"
  },
  "readme": "# grunt-premailer\n\n> Grunt wrapper task for [Premailer](https://github.com/alexdunae/premailer/)\n\n\n##Requirements\n\nThis plugin is a [Grunt](http://gruntjs.com/)  wrapper around the [Premailer](https://github.com/alexdunae/premailer/) Ruby gem developed by Alex Dunae. In order to run it you will need the following packages installed on your system:\n\n* Node.js >= 0.10.0 ([install wiki](https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager))\n* Grunt-cli >= 0.1.7 and Grunt >=0.4.2 (`npm install grunt-cli -g`)\n* Ruby >= 1.8.7 ([installers](http://www.ruby-lang.org/en/downloads/))\n* Premailer >= 1.8.0 (`gem install premailer` and, most of the time, `gem install hpricot`)\n\n## Getting Started\n\nThis plugin requires Grunt `~0.4.2`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-premailer --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-premailer');\n```\n\n## The \"premailer\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `premailer` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  premailer: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.mode\nType: `String`\nDefault value: `'html'`\n\nOutput format. Either `'html'` (HTML formatted email) or `'txt'` (plaintext email).\n\n#### options.baseUrl\nType: `String`\nDefault value: `''`\n\nBase URL to append to relative links.\n\n#### options.queryString\nType: `String`\nDefault value: `''`\n\nQuery string to append to links.\n\n#### options.css\nType: `Array`\nDefault value: `[]`\n\nAdditional CSS stylesheets to process. Paths are relative to the `Gruntfile.js` file. Any Grunt compatible globbing and template syntax is supported. \n\n#### options.removeClasses\nType: `Boolean`\nDefault value: `false`\n\nRemoves HTML classes.\n\n#### options.removeScripts\nType: `Boolean`\nDefault value: `false`\n\nRemoves HTML scripts. _(was `true` by default until v0.2.5)\n\n#### options.removeComments\nType: `Boolean`\nDefault value: `false`\n\nRemoves HTML comments.\n\n\n#### options.preserveStyles\nType: `Boolean`\nDefault value: `false`\n\nPreserve any `link rel=stylesheet` and `style` elements.\n\n#### options.lineLength\nType: `Number`\nDefault value: `65`\n\nLine length for plaintext version.\n\n#### options.ioException\nType: `Boolean`\nDefault value: `false`\n\nAborts on I/O errors.\n\n#### options.verbose\nType: `Boolean`\nDefault value: `false`\n\nPrints additional information at runtime.\n\n### Usage Examples\n\n#### Default Options\nIn this example, the default options are used to inline CSS styles in into the markup.\n\n```js\ngrunt.initConfig({\n  premailer: {\n    simple: {\n      options: {},\n      files: {\n        'dest/email.html': ['src/email.html']\n      }\n    }\n  }\n})\n```\n\n#### Custom Options\nIn this example, custom options are used to append a query string (such as a google campaign click tracking) to every link.\n\n```js\ngrunt.initConfig({\n  premailer: {\n    withqs: {\n      options: {\n        queryString: 'utm_source=premailer&utm_medium=email&utm_campaign=test'\n      },\n      files: {\n        'dest/email.html': ['src/email.html']\n      }\n    }\n  }\n})\n```\n\n####Usage Notes\n\n**`BaseUrl` option and stylesheets parsing**\n\nBe aware that the base URL gets applied _before_ inlining styles. This process will convert all relative linked stylesheets to absolute ones, possibly preventing the parser to retrieve the resources (since `link` tags point to a different location).  \nIn this scenario it's advisable to use the `css` option since it's uneffected from `BaseUrl`.\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n\n0.2.7 Minor bug fixing\n\n0.2.6 Added option `removeScripts`to preserve/remove `script` tags (was `true` by default until v0.2.5) \n\n0.2.5 Added ability to remove temp folders even outside project folder (thanx to @fadomire)\n\n0.2.4 Updated dependencies to Nodejs 0.10+, Grunt 0.4.2+ and Premailer 1.8.0+ (media query support). Added postinstall check for Premailer gem version.\n\n0.2.3 Check for large HTML emails (see https://github.com/dwightjack/grunt-premailer/issues/1)\n\n0.2.2 Bugfix when passing multiple file targets (see #5)\n\n0.2.1 Bugfix in custom premailer script\n\n0.2.0 - Moved to custom ruby script to execute premailer instead of `premailer` binary. Added `removeComments` and `preserveStyles` options. Premailer not requires v1.7.8 or greater.\n\n0.1.1 - Replaced [deprecated](http://gruntjs.com/blog/2013-11-21-grunt-0.4.2-released) reference to `grunt.util._` with `lodash` npm module\n\n0.1.0 - Initial release\n",
  "readmeFilename": "README.md",
  "_id": "grunt-premailer@0.2.7",
  "dist": {
    "shasum": "9ea6467064a171b443dc621214f93710254a968c"
  },
  "_from": "grunt-premailer@^0.2.5",
  "_resolved": "https://registry.npmjs.org/grunt-premailer/-/grunt-premailer-0.2.7.tgz"
}
